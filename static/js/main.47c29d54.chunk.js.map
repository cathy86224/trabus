{"version":3,"sources":["components/Data.js","images/logo.svg","components/Selection.js","components/Table.js","components/Chart.js","components/Footer.js","components/map/MapDisplay.js","images/loading.gif","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["urls","monthNames","years","STATES","ca","az","nm","Selection","props","selectionStateClicked","setState","stateClicked","state","selectionReservoirClicked","reservoirClicked","stateSelected","reserviorsFilter","getStateSelected","reservoirSelected","code","name","reservoirList","getReservoirSelected","getReservoirSelectedName","markerSelected","prevProp","prevState","this","reservoirSelectedName","mapClicked","data","filter","site","sourceInfo","siteCode","value","mapSelectedRes","values","length","siteName","split","toLowerCase","replace","letter","toUpperCase","data20","hasOwnProperty","className","src","Logo","alt","onClick","Object","keys","map","stateItemClassName","reservoirItemClassName","Component","Table","averageMonth","year","avgArr","Array","fill","timeArr","valArr","month","val","monthCount","parseInt","shift","Math","round","toString","avg20","avg19","avg18","updateTableValue","table20","table19","table18","index","displayTable","Chart","getValues","valueObj","states","time","tempVal","tempTime","dateTime","substring","push","display","data19","data18","chartData20","chartData19","chartData18","labels","datasets","label","backgroundColor","Fragment","displayChartData","resName","Footer","href","target","rel","DEFAULT_POSITION","MapDisplay","getLocations","locations","ids","names","geoState","location","lat","geoLocation","geogLocation","latitude","long","longitude","id","includes","mapClassName","MapContainer","center","zoom","maxZoom","minZoom","TileLayer","attribution","url","geo","Marker","position","eventHandlers","click","markerClicked","Popup","Main","Promise","all","fetch","then","response","json","timeSeries","loadingGif","minWidth","mapSelectedState","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47c29d54.chunk.js","sourcesContent":["export const urls = [\n    // 2020\n    \"https://waterservices.usgs.gov/nwis/dv/?format=json&stateCd=ca&startDT=2020-01-01&endDT=2020-12-31&parameterCd=00054&siteStatus=active\",\n    \"https://waterservices.usgs.gov/nwis/dv/?format=json&stateCd=az&startDT=2020-01-01&endDT=2020-12-31&parameterCd=00054&siteStatus=active\",\n    \"https://waterservices.usgs.gov/nwis/dv/?format=json&stateCd=nm&startDT=2020-01-01&endDT=2020-12-31&parameterCd=00054&siteStatus=active\",\n\n    // 2019\n    \"https://waterservices.usgs.gov/nwis/dv/?format=json&stateCd=ca&startDT=2019-01-01&endDT=2019-12-31&parameterCd=00054&siteStatus=active\",\n    \"https://waterservices.usgs.gov/nwis/dv/?format=json&stateCd=az&startDT=2019-01-01&endDT=2019-12-31&parameterCd=00054&siteStatus=active\",\n    \"https://waterservices.usgs.gov/nwis/dv/?format=json&stateCd=nm&startDT=2019-01-01&endDT=2019-12-31&parameterCd=00054&siteStatus=active\",\n    \n    // 2018\n    \"https://waterservices.usgs.gov/nwis/dv/?format=json&stateCd=ca&startDT=2018-01-01&endDT=2018-12-31&parameterCd=00054&siteStatus=active\",\n    \"https://waterservices.usgs.gov/nwis/dv/?format=json&stateCd=az&startDT=2018-01-01&endDT=2018-12-31&parameterCd=00054&siteStatus=active\",\n    \"https://waterservices.usgs.gov/nwis/dv/?format=json&stateCd=nm&startDT=2018-01-01&endDT=2018-12-31&parameterCd=00054&siteStatus=active\",\n]\n\nexport const monthNames = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n]\n\nexport const years = [\n    '2018',\n    '2019',\n    '2020'\n]","export default __webpack_public_path__ + \"static/media/logo.848cecd3.svg\";","import React, { Component } from 'react'\nimport Logo from \"../images/logo.svg\"\n\nconst STATES = {\n    ca: \"California\",\n    az: \"Arizona\",\n    nm: \"New Mexico\"\n}\n\nexport default class Selection extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            stateClicked: false,\n            stateSelected: \"\",\n            reservoirClicked: false,\n            reservoirSelected: \"\",\n            reservoirList: {},\n            markerSelected: []\n        }\n    }\n\n    componentDidUpdate(prevProp, prevState) {\n        if(prevState.stateSelected !== this.state.stateSelected) {\n            let reservoirSelected = \"\"\n            this.setState({\n                reservoirSelected\n            })\n        }\n        if(prevProp.reservoirSelectedName !== this.props.reservoirSelectedName) {\n            this.setState({\n                markerSelected: this.props.mapClicked,\n                // stateSelected: \"\",\n                // reservoirSelected: \"\"\n            })\n        }\n    }\n\n    getReservoirName(data) {\n        let reservoirSelected = data.filter(site => (site.sourceInfo.siteCode[0].value === this.props.mapSelectedRes) && (site.values[0].value.length !== 0))[0].sourceInfo.siteName\n        reservoirSelected = reservoirSelected.split(\",\")[0].toLowerCase()\n        reservoirSelected = reservoirSelected.replace(/(^\\w{1})|(\\s+\\w{1})/g, letter => letter.toUpperCase());\n        return reservoirSelected\n    }\n\n    selectionStateClicked = () => {\n        this.setState({\n            stateClicked: !this.state.stateClicked\n        })\n    }\n\n    selectionReservoirClicked = () => {\n        this.setState({\n            reservoirClicked: !this.state.reservoirClicked\n        })\n    }\n\n    stateItemClassName() {\n        let name = \"item state\"\n        if(this.state.stateClicked) {\n            return name + \" clicked\"\n        }\n        return name\n    }\n\n    reservoirItemClassName() {\n        let name = \"item\"\n        if(this.state.reservoirClicked) {\n            return name + \" clicked\"\n        }\n        return name\n    }\n\n    stateSelected = (state) => {\n        this.reserviorsFilter(state)\n        this.setState({\n            stateSelected: state,\n            stateClicked: false\n        })\n        this.props.getStateSelected(state)\n    }\n\n    reservoirSelected = (code) => {\n        let name = this.state.reservoirList[code]\n        this.setState({\n            reservoirSelected: name,\n            reservoirClicked: false\n        })\n        this.props.getReservoirSelected(code)\n        this.props.getReservoirSelectedName(name)\n    }\n\n    reserviorsFilter(state) {\n        let data = this.props.data20[state]\n        let reservoirList = {}\n        for(let site of data) {\n            let code = site.sourceInfo.siteCode[0].value\n            let name = site.sourceInfo.siteName.split(\",\")[0].toLowerCase()\n            name = name.replace(/(^\\w{1})|(\\s+\\w{1})/g, letter => letter.toUpperCase());\n            if(!reservoirList.hasOwnProperty(code)) {\n                reservoirList[code] = name\n            }\n        }\n\n        this.setState({reservoirList})\n    }\n\n    render() {\n        return (\n            <div className=\"selections\">\n                <img className=\"logo\" src={Logo} alt=\"Trabus logo\"/>\n                <div className=\"selection-wrap states\">\n                    <div className=\"selection states\" onClick={this.selectionStateClicked}>\n                        {this.state.stateSelected === \"\" ?\n                            \"Select a state\" :\n                            (STATES[this.state.stateSelected])\n                        }\n                    </div>\n                    <div className=\"items\">\n                        {Object.keys(STATES).map(state => {\n                            return (\n                                <div className={this.stateItemClassName()} key={state} onClick={() => this.stateSelected(state)}>\n                                    {STATES[state]}\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n                <div className=\"selection-wrap reservoir\">\n                    {this.state.stateSelected !== \"\" ?\n                    <div>\n                        <div className=\"selection reservoirs\" onClick={this.selectionReservoirClicked}>\n                            {this.state.reservoirSelected === \"\" ?\n                                \"Select a reservoir\" :\n                                this.state.reservoirSelected\n                            }\n                        </div>\n                        <div className=\"items reservoir\">\n                            {Object.keys(this.state.reservoirList).map(code => {\n                                return (\n                                    <div className={this.reservoirItemClassName()} key={code} onClick={() => this.reservoirSelected(code)}>\n                                        {this.state.reservoirList[code]}\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div> :\n                    <div>\n                        <div className=\"selection disable\">\n                            Select a reservoirs\n                        </div>\n                    </div>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {monthNames, years} from \"./Data\"\n\nexport default class Table extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            avg20: [],\n            avg19: [],\n            avg18: []\n        }\n    }\n\n    componentDidUpdate(prevProp) {\n        if(prevProp !== this.props) {\n            this.updateTableValue()\n        }\n    }\n\n    componentDidMount() {\n        this.updateTableValue()\n    }\n\n    updateTableValue() {\n        this.averageMonth(this.props.table20, \"20\")\n        this.averageMonth(this.props.table19, \"19\")\n        this.averageMonth(this.props.table18, \"18\")\n    }\n\n    averageMonth = (data, year) => {\n        let avgArr = new Array(12).fill(0);\n        let timeArr = [...data[0]], valArr = [...data[1]];\n\n        for(let month = 0; month < 12; month++) {\n            let val = 0, monthCount = 0\n            while(timeArr.length !== 0) {\n                let curMonth = parseInt(timeArr[0].split(\"-\")[0])\n                if(curMonth === month+1) {\n                    val += valArr.shift()\n                    timeArr.shift()\n                    monthCount++\n                }\n                else {\n                    break\n                }\n            }\n\n            if(monthCount !== 0) {\n                val /= monthCount\n                avgArr[month] = Math.round(val).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n        }\n\n        this.setState({\n            [\"avg\" + year]: avgArr\n        })\n    }\n\n    displayTable(data) {\n        if(data === 0) {\n            return \"EQP\"\n        }\n        return data\n    }\n\n    render() {\n        return (\n            <div className=\"table\">\n                <div className=\"table-title\">Average Reservoir Storage</div>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>{\" \"}</th>\n                            {years.map(year => (\n                                <th key={year}>\n                                    {year}\n                                </th>\n                            ))}\n                        </tr>\n                        {monthNames.map((month, index) => (\n                            <tr key={month}>\n                                <td>{month}</td>\n                                <td>{this.displayTable(this.state.avg18[index])}</td>\n                                <td>{this.displayTable(this.state.avg19[index])}</td>\n                                <td>{this.displayTable(this.state.avg20[index])}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n                <div className=\"table-note\">\n                    <i>*EQP = Value affected by equipment malfunction.</i>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Table from \"./Table\"\nimport { Bar } from 'react-chartjs-2';\n\nexport default class Chart extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            time: [],\n            value: [],\n            display: false\n        }\n    }\n\n    componentDidUpdate(prevProp) {\n        if(prevProp.states.stateSelected !== this.props.states.stateSelected) {\n            this.setState({\n                display: false\n            })\n        }\n        else if(prevProp.states.reservoirSelected !== this.props.states.reservoirSelected) {\n            let data20 = this.props.states.data20[this.props.states.stateSelected]\n            let data19 = this.props.states.data19[this.props.states.stateSelected]\n            let data18 = this.props.states.data18[this.props.states.stateSelected]\n            let chartData20 = this.getValues(data20)\n            let chartData19 = this.getValues(data19)\n            let chartData18 = this.getValues(data18)\n\n            this.setState({\n                time: chartData20[0],\n                value: chartData20[1],\n                display: true,\n                table20: chartData20,\n                table19: chartData19,\n                table18: chartData18\n            })\n        }\n    }\n\n    getValues = (data) => {\n        let valueObj = (data.filter(code => (code.sourceInfo.siteCode[0].value === this.props.states.reservoirSelected) && (code.values[0].value.length !== 0)))[0].values[0].value\n        let time = [], value = [];\n\n        for(let val of valueObj) {\n            let tempVal = parseInt(val.value)\n            let tempTime = val.dateTime.split('T')[0].substring(5)\n\n            if(tempVal > 0) {\n                value.push(tempVal)\n                time.push(tempTime)\n            }\n        }\n\n        return [time,value]\n    }\n\n    displayChartData() {\n        let data = {\n            labels: this.state.time,\n            datasets: [\n                {\n                    label: \"acre-feet\",\n                    data: this.state.value,\n                    backgroundColor: \"#577b94\",\n                }\n            ]\n        }\n\n        return data\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.state.display && \n                    <div className=\"chart\">\n                        <div className=\"title\">\n                            {this.props.states.reservoirSelectedName}{\" \"}\n                            2020 Daily Acre-Feet Values\n                        </div>\n                        <div className=\"bar-chart\">\n                            <Bar data={this.displayChartData()}/>\n                            <Table table20={this.state.table20} table19={this.state.table19} table18={this.state.table18} resName={this.props.states.reservoirSelected}/>\n                        </div>\n                    </div>\n                }\n            </React.Fragment>\n        \n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Logo from \"../images/logo.svg\"\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"footer\">\n                    <div className=\"logo-wrap\">\n                        <img src={Logo} alt=\"logo\" />\n                        Impact Through Technical Innovation\n                    </div>\n                    <div className=\"contact\">\n                        <div className=\"header\">\n                            <b>COMPANY</b>\n                        </div>\n                        <a className=\"item\" href=\"https://trabus.com/about/\" target=\"_blank\" rel=\"noreferrer\">About Us</a>\n                        <a className=\"item\" href=\"https://trabus.com/careers/\"  target=\"_blank\" rel=\"noreferrer\">Careers</a>\n                        <a className=\"item\" href=\"https://trabus.com/contact/\" target=\"_blank\" rel=\"noreferrer\">Contact</a>\n                    </div>\n                    <div className=\"contact\">\n                        <div className=\"header\">\n                            <b>SOCIAL MEDIA</b>\n                        </div>\n                        <a className=\"item\" href=\"https://www.facebook.com/Trabus-Technologies-143543429114409/\" target=\"_blank\" rel=\"noreferrer\">Facebook</a>\n                        <a className=\"item\" href=\"https://www.linkedin.com/company/trabus-technologies/\"  target=\"_blank\" rel=\"noreferrer\">LinkedIn</a>\n                    </div>\n                </div>\n                <div className=\"copyright\" >\n                    Copyright © 2021 TRABUS Technologies - Cathy Hsieh. All Rights Reserved.\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {MapContainer, Marker, Popup, TileLayer} from \"react-leaflet\"\nimport \"./MapDisplay.scss\"\n\nconst DEFAULT_POSITION = [36.548927, -110.093735]\n\nexport default class MapDisplay extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            locations: [],\n            names: [],\n            ids:[],\n            geoState: [],\n        }\n    }\n\n    componentDidMount() {\n        this.getLocations()\n    }\n\n    getLocations = () => {\n        let data = this.props.data\n        let locations = [], ids = [], names = [], geoState = [];\n        for(let state of Object.keys(data)) {\n            for(let location of data[state]) {\n                let lat = location.sourceInfo.geoLocation.geogLocation.latitude\n                let long = location.sourceInfo.geoLocation.geogLocation.longitude\n                let siteName = location.sourceInfo.siteName\n                let id = location.sourceInfo.siteCode[0].value\n                if(!names.includes(siteName)) {\n                    names.push(siteName)\n                    locations.push([lat,long])\n                    ids.push(id)\n                    geoState.push(state)\n                }\n            }\n        }\n\n        this.setState({\n            locations,\n            names,\n            ids,\n            geoState\n        })\n    }\n\n    mapClassName() {\n        let name = \"map\"\n        if(this.props.resName !== \"\") {\n            return name + \" with-table\"\n        }\n        return name\n    }\n\n    markerClicked(index) {\n        let id = this.state.ids[index]\n        let state = this.state.geoState[index]\n        let name = this.state.names[index]\n        name = name.split(\",\")[0].toLowerCase()\n        name = name.replace(/(^\\w{1})|(\\s+\\w{1})/g, letter => letter.toUpperCase());\n        this.props.getStateSelected(state)\n        this.props.getReservoirSelected(id)\n        this.props.getReservoirSelectedName(name)\n    }\n\n    render() {\n        return (\n            <div className={this.mapClassName()}>\n                <MapContainer center={DEFAULT_POSITION} zoom={6} maxZoom={11} minZoom={5}>\n                    <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    {this.state.locations.map((geo, index) => (\n                        <Marker \n                            key={geo[0]} \n                            position={geo}\n                            eventHandlers={{\n                                click: () => {\n                                    this.markerClicked(index)\n                                },\n                            }}>\n                            <Popup>\n                                <div className=\"site-name\">\n                                    {this.state.names[index]}\n                                </div>\n                                <div className=\"site-id\">\n                                    Site code: {this.state.ids[index]}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    ))}\n                </MapContainer>\n            </div>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/loading.2048467f.gif\";","import React, { Component } from 'react'\nimport {urls} from \"./Data\"\nimport Selection from \"./Selection\"\nimport Chart from \"./Chart\"\nimport Footer from \"./Footer\"\nimport Map from \"./map/MapDisplay\"\nimport MediaQuery from \"react-responsive\"\nimport loadingGif from \"../images/loading.gif\"\nimport \"./Main.scss\"\n\nexport default class Main extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            data20: {\n                ca: [],\n                az: [],\n                nm: []\n            },\n            stateSelected: \"\",\n            reservoirSelected: \"\",\n            reservoirSelectedName: \"\",\n        }\n    }\n\n    componentDidMount() {\n        // fetch data in the order of CA, AZ, and NM\n        Promise.all(\n            urls.map(url =>\n                fetch(url)\n                    .then(response => response.json())\n                    .then(data => data.value.timeSeries)\n            )\n        ).then(data => {\n            this.setState({\n                data20: {\n                    ca: data[0],\n                    az: data[1],\n                    nm: data[2]\n                },\n                data19: {\n                    ca: data[3],\n                    az: data[4],\n                    nm: data[5]\n                },\n                data18: {\n                    ca: data[6],\n                    az: data[7],\n                    nm: data[8]\n                }\n            })\n        })\n    }\n\n    getStateSelected = (state) => {\n        this.setState({stateSelected: state})\n    }\n\n    getReservoirSelected = (code) => {\n        this.setState({reservoirSelected: code})\n    }\n\n    getReservoirSelectedName = (name) => {\n        this.setState({reservoirSelectedName: name})\n    }\n\n    render() {\n        let data20 = this.state.data20\n        if(data20.ca.length === 0 || data20.az.length === 0 || data20.nm.length === 0) {\n            return (\n                <div className=\"loading\">\n                    <img src={loadingGif} alt=\"Loading GIF\"/>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className=\"main\">\n                    <MediaQuery minWidth={500}>\n                        <Map \n                            data={data20} \n                            getStateSelected={this.getStateSelected} \n                            getReservoirSelected={this.getReservoirSelected} \n                            resName={this.state.reservoirSelected}\n                            getReservoirSelectedName={this.getReservoirSelectedName}/>\n                    </MediaQuery>\n                    <Chart states={this.state} />\n                    <Selection \n                        data20={data20} \n                        getStateSelected={this.getStateSelected} \n                        getReservoirSelected={this.getReservoirSelected} \n                        mapSelectedRes={this.state.reservoirSelected} \n                        mapSelectedState={this.state.stateSelected}\n                        reservoirSelectedName={this.state.reservoirSelectedName}\n                        getReservoirSelectedName={this.getReservoirSelectedName}/>\n                    <Footer />\n                </div>\n            )\n        }\n    }\n}\n","import Main from \"./components/Main\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}